{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bofe",
				"before"
			],
			[
				"before",
				"beforeCommit"
			],
			[
				"grid",
				"gridList"
			],
			[
				"con",
				"container"
			],
			[
				"Board",
				"BOARD_WIDGET"
			],
			[
				"col",
				"collection"
			],
			[
				"full",
				"full_page"
			],
			[
				"widh",
				"width"
			],
			[
				"will",
				"will_be_killed"
			],
			[
				"list",
				"list_extra_params"
			],
			[
				"filte",
				"filtered_reports"
			],
			[
				"reports",
				"reports_params"
			],
			[
				"dump",
				"dumps	function"
			],
			[
				"Group",
				"GroupFactory"
			],
			[
				"home",
				"HOME_BOARD	import"
			],
			[
				"grou",
				"group_id"
			],
			[
				"display",
				"display_group_id"
			],
			[
				"Gro",
				"GroupFactory	import"
			],
			[
				"displa",
				"display_group_id	param"
			],
			[
				"page",
				"PAGE_WIDTH	import"
			],
			[
				"_",
				"_get_report_data	function"
			],
			[
				"resour",
				"resource_url	function"
			],
			[
				"subsc",
				"subscriptable"
			],
			[
				"readli",
				"readlines	function"
			],
			[
				"migr",
				"migration_number	forflow"
			],
			[
				"report",
				"report_factory	import"
			],
			[
				"key",
				"keyword_team	import"
			],
			[
				"Ke",
				"KeywordTeamFactory	class"
			],
			[
				"Rep",
				"ReportTemplateFactory	class"
			],
			[
				"cre",
				"create_report_template_with_sources_meta	import"
			],
			[
				"Repo",
				"ReportTemplateFactory"
			],
			[
				"vei",
				"ViewModes"
			],
			[
				"vi",
				"ViewModes"
			],
			[
				"emai",
				"EmailSubscriptionFactory"
			],
			[
				"Email",
				"EmailSubscriptionFactory"
			],
			[
				"Emai",
				"EmailSubscription"
			],
			[
				"laz",
				"LazyAttribute"
			],
			[
				"EmailS",
				"EmailSubscriptionFactory"
			],
			[
				"t",
				"type"
			],
			[
				"quack",
				"quackBehavior"
			],
			[
				"qua",
				"QuackBehavior"
			],
			[
				"fly",
				"flyBehavior"
			],
			[
				"view",
				"view_mode"
			],
			[
				"wid",
				"width"
			],
			[
				"max",
				"max_items_top"
			],
			[
				"mn",
				"min-height"
			],
			[
				"stas",
				"stash_message"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/alex/uberVU/deploy/conf/thehole.yml",
			"settings":
			{
				"buffer_size": 2561,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/alex/uberVU/deploy/conf/modules/backend.yml",
			"settings":
			{
				"buffer_size": 688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/alex/uberVU/deploy/github_api.py",
			"settings":
			{
				"buffer_size": 8027,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1537 files for \"test_deploy_timedout_script\"\n\n/Users/alex/uberVU/deploy/tests/test_deploy.py:\n  132:     def test_deploy_timedout_script(self, notify_pusher):\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 188,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/alex/uberVU/deploy/tests/test_deploy.py",
			"settings":
			{
				"buffer_size": 6018,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#The structure of the input is the one below therefore I should have it here all time + the important mentions\n# <username> is connected to <name1>, <name2>,...,<nameN>. \n# <username> likes to play <game1>,...,<gameN>.\n\n# You can assume that <username> is a unique identifier for a user. In other\n# words, there is only one John in the network. Furthermore, connections are not\n# symmetric - if John is connected with Alice, it does not mean that Alice is\n# connected with John. \n\n# create_data_structure(string_input): \n#   Parses a block of text (such as the one above) and stores relevant \n#   information into a data structure. You are free to choose and design any \n#   data structure you would like to use to manage the information. \n# \n# Arguments: \n#   string_input: block of text containing the network information\n# \n# Return: \n#   The new network data structure\nexample_input=\"John is connected to Bryant, Debra, Walter.\\\nJohn likes to play The Movie: The Game, The Legend of Corgi, Dinosaur Diner.\\\nBryant is connected to Olive, Ollie, Freda, Mercedes.\\\nBryant likes to play City Comptroller: The Fiscal Dilemma, Super Mushroom Man.\\\nMercedes is connected to Walter, Robin, Bryant.\\\nMercedes likes to play The Legend of Corgi, Pirates in Java Island, Seahorse Adventures.\\\nOlive is connected to John, Ollie.\\\nOlive likes to play The Legend of Corgi, Starfleet Commander.\\\nDebra is connected to Walter, Levi, Jennie, Robin.\\\nDebra likes to play Seven Schemers, Pirates in Java Island, Dwarves and Swords.\\\nWalter is connected to John, Levi, Bryant.\\\nWalter likes to play Seahorse Adventures, Ninja Hamsters, Super Mushroom Man.\\\nLevi is connected to Ollie, John, Walter.\\\nLevi likes to play The Legend of Corgi, Seven Schemers, City Comptroller: The Fiscal Dilemma.\\\nOllie is connected to Mercedes, Freda, Bryant.\\\nOllie likes to play Call of Arms, Dwarves and Swords, The Movie: The Game.\\\nJennie is connected to Levi, John, Freda, Robin.\\\nJennie likes to play Super Mushroom Man, Dinosaur Diner, Call of Arms.\\\nRobin is connected to Ollie.\\\nRobin likes to play Call of Arms, Dwarves and Swords.\\\nFreda is connected to Olive, John, Debra.\\\nFreda likes to play Starfleet Commander Ninja Hamsters, Seahorse Adventures.\"\n\nexample_input_alternate=\"\"\"John is connected to Bryant, Debra, Walter. John likes to play The Movie: The Game, The Legend of Corgi, Dinosaur Diner. Bryant is connected to Olive, Ollie, Freda, Mercedes. Bryant likes to play City Comptroller: The Fiscal Dilemma, Super Mushroom Man. Mercedes is connected to Walter, Robin, Bryant. Mercedes likes to play The Legend of Corgi, Pirates in Java Island, Seahorse Adventures. Olive is connected to John, Ollie. Olive likes to play The Legend of Corgi, Starfleet Commander. Debra is connected to Walter, Levi, Jennie, Robin. Debra likes to play Seven Schemers, Pirates in Java Island, Dwarves and Swords. Walter is connected to John, Levi, Bryant. Walter likes to play Seahorse Adventures, Ninja Hamsters, Super Mushroom Man. Levi is connected to Ollie, John, Walter. Levi likes to play The Legend of Corgi, Seven Schemers, City Comptroller: The Fiscal Dilemma. Ollie is connected to Mercedes, Freda, Bryant. Ollie likes to play Call of Arms, Dwarves and Swords, The Movie: The Game. Jennie is connected to Levi, John, Freda, Robin. Jennie likes to play Super Mushroom Man, Dinosaur Diner, Call of Arms. Robin is connected to Ollie. Robin likes to play Call of Arms, Dwarves and Swords. Freda is connected to Olive, John, Debra. Freda likes to play Starfleet Commander, Ninja Hamsters, Seahorse Adventures.\"\"\"\n\n\ndef assisting_search(string,start,step,option):\n  string = string.split('.')\n  result=[]\n  #case 1 == getting usernames\n  if option == 1 and step == 2:\n    for i in range(start,len(string),step):\n      search = string[i].find(\"is connected\")\n      if search !=-1:\n        username = string[i][:search-1].strip()\n        result.append(username)\n    \n  #case 2 getting  friends\n  if option ==2 and step ==2:\n    for i in range(start,len(string),step):\n      search=string[i].find(\"to\")\n      if search!=-1:\n        result.append(string[i][search+3:].split(', '))\n  #case 3 getting games\n  if option == 3 and step == 2:\n    for i in range(start,len(string),step):\n      search = string[i].find(\"to play\")\n      if search !=-1:\n        result.append(string[i][search+8:].split(', '))\n  return result\n    \n#print assisting_search(example_input_alternate,0,2,1)\n#print assisting_search(example_input_alternate,0,2,2)\n#print assisting_search(example_input_alternate,1,2,3)\n\n\ndef create_data_structure(string_input):\n  network={}\n  usernames = assisting_search(string_input,0,2,1) #all usernames\n  #print usernames\n  friends = assisting_search(string_input,0,2,2) # # all friends\n  #print friends\n  games = assisting_search(string_input,1,2,3) # all games\n  #print games\n  #building my network dictionary\n  for i in range(0,len(usernames)):\n    username = usernames[i]\n    network[username] = [friends[i],games[i]]\n    \n  return network\n#print create_data_structure(example_input)\n\n#print create_data_structure(example_input_alternate)\n\n# get_connections(network, user): \n#   Returns a list of all the connections a user has.\n#\n# Arguments: \n#   network: The network you created with create_data_structure. \n#   user:    String containing the name of the user.\n# \n# Return: \n#   A list of all connections the user has. If the user has no connections, \n#   return an empty list. If the user is not in network, return None.  \ndef get_connections(network, user):\n  if user in network:\n    return network[user][0]\n  if user not in network:\n    return None\n  return []\n#print get_connections(create_data_structure(example_input), 'Ollie') \n# add_connection(network, user_A, user_B): \n#   Adds a connection from user_A to user_B. Make sure to check that both users \n#   exist in network.\n# \n# Arguments: \n#   network: The network you created with create_data_structure. \n#   user_A:  String with the name of the user (\"Gary\")\n#   user_B:  String with the name of the user that will be the new connection.\n#\n# Return: \n#   The updated network with the new connection added (if necessary), or False \n#   if user_A or user_B do not exist in network.\ndef add_connection(network, user_A, user_B):\n  if user_A in network and user_B in network:\n    if user_B not in network[user_A][0]:\n      network[user_A][0].append(user_B)\n      return network\n  return False\n#print add_connection(create_data_structure(example_input),'John','Mercedes')\n\n# add_new_user(network, user, games): \n#   Creates a new user profile and adds that user to the network, along with\n#   any game preferences specified in games. Assume that the user has no \n#   connections to begin with.\n# \n# Arguments:\n#   network: The network you created with create_data_structure. \n#   user:    String containing the users name to be added (e.g. \"Dave\")\n#   games:   List containing the user's favorite games, e.g.:\n#        ['Ninja Hamsters', 'Super Mushroom Man', 'Dinosaur Diner']\n#\n# Return: \n#   The updated network with the new user and game preferences added. If the \n#   user is already in the network, update their game preferences as necessary.\ndef add_new_user(network, user, games):\n  if user not in network:\n    network[user] = [[], games]\n    return network\n  network[user][1] = games\n    \n    return network\n\n#print add_new_user(create_data_structure(example_input),\"Danut\",['Assassin Creed','World of Warcraft','Mass effect'])\n#print add_new_user(create_data_structure(example_input),\"Danut\",['Assassin Creed','World of Warcraft','Mass effect 2'])\n\n\n# ----------------------------------------------------------------------------- \n# get_secondary_connections(network, user): \n#   Finds all the secondary connections, i.e. connections of connections, of a \n#   given user.\n# \n# Arguments: \n#   network: The network you created with create_data_structure. \n#   user:    String containing the name of a user.\n#\n# Return: \n#   A list containing the secondary connections (connections of connections).\n#   If the user is not in the network, return None. If a user has no primary \n#   connections to begin with, you should return an empty list.\n# \n# NOTE: \n#   It is OK if a user's list of secondary connections includes the user \n#   himself/herself. It is also OK if the list contains a user's primary \n#   connection that is a secondary connection as well.\ndef get_secondary_connections(network, user):\n  return []\n\n\n# -----------------------------------------------------------------------------   \n# connections_in_common(network, user_A, user_B): \n#   Finds the number of people that user_A and user_B have in common.\n#  \n# Arguments: \n#   network: The network you created with create_data_structure. \n#   user_A:    String containing the name of user_A.\n#   user_B:    String containing the name of user_B.\n#\n# Return: \n#   The number of connections in common (integer). Should return False if \n#   user_A or user_B are not in network.\ndef connections_in_common(network, user_A, user_B):\n    if (user_A not in network) or (user_B not in network):\n      return False\n    i = 0\n    for people in user_A[0]\n      for people_second in user_B[0]:\n        if people == people_second:\n          i = i +1\n    return i\nprint create_data_structure(example_input)\nprint connections_in_common(create_data_structure(example_input),\"John\",\"Mercedes\")\nprint connections_in_common(create_data_structure(example_input),\"John\",\"Debra\")",
			"settings":
			{
				"buffer_size": 9459,
				"line_ending": "Unix",
				"name": "#The structure of the input is the one below there"
			}
		},
		{
			"file": "/Users/alex/uberVU/deploy/logs.py",
			"settings":
			{
				"buffer_size": 693,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"choose",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"lint mode",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"coffee",
				"Coffee: Display JavaScript"
			],
			[
				"view",
				"GitHub: View"
			],
			[
				"github",
				"GitHub: View"
			],
			[
				"installp",
				"Package Control: Install Package"
			],
			[
				"bla",
				"Git: Blame"
			],
			[
				"view ",
				"GitHub: View"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"show er",
				"SublimeLinter: Show All Errors"
			],
			[
				"githu",
				"GitHub: View"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"lint this",
				"SublimeLinter: Lint This View"
			],
			[
				"lint view",
				"SublimeLinter: Lint This View"
			],
			[
				"lintv",
				"SublimeLinter: Lint This View"
			],
			[
				"lintview",
				"SublimeLinter: Lint This View"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"prefs",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"linter",
				"SublimeLinter: Enable Linter"
			],
			[
				"prefslinterdefa",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"prefslinter",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"packe list",
				"Package Control: List Packages"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"enable",
				"SublimeLinter: Enable Linter"
			],
			[
				"enable li",
				"SublimeLinter: Disable Linter"
			],
			[
				"removepa",
				"Package Control: Remove Package"
			],
			[
				"removep",
				"Package Control: Remove Package"
			],
			[
				"disable",
				"SublimeLinter: Disable Linter"
			],
			[
				"enablelint",
				"SublimeLinter: Disable Linter"
			],
			[
				"prefslint",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"packages",
				"Package Control: List Packages"
			],
			[
				"linters",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"show all",
				"SublimeLinter: Show All Errors"
			],
			[
				"linterto",
				"SublimeLinter: Toggle Linter"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"LIST ERROR",
				"SublimeLinter: Show All Errors"
			],
			[
				"LINT",
				"SublimeLinter: Lint This View"
			],
			[
				"linte",
				"SublimeLinter: Disable Linter"
			],
			[
				"prefssbu",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"enable p",
				"Package Control: Enable Package"
			],
			[
				"errors",
				"SublimeLinter: Show All Errors"
			],
			[
				"prefssubl",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"prefssub",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"toggl li",
				"SublimeLinter: Toggle Linter"
			],
			[
				"toggle linte",
				"SublimeLinter: Toggle Linter"
			],
			[
				"prefss",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"linter debu",
				"SublimeLinter: Enable Debug Mode"
			],
			[
				"coffee li",
				"Coffee: Lint"
			],
			[
				"watch",
				"Coffee: Toggle Watch Mode"
			],
			[
				"destro",
				"Origami: Destroy Current Pane"
			],
			[
				"coffe",
				"Coffee: Quick Run Bar"
			],
			[
				"run sele",
				"Coffee: Run Script / Selection"
			],
			[
				"co",
				"Coffee: Check Syntax"
			],
			[
				"quick",
				"Git: Quick Commit"
			],
			[
				"commit",
				"Git: Quick Commit"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"amme",
				"Git: Amend Commit"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Package Control Settings – User"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"cofeescript",
				"Coffee: Run Script / Selection"
			],
			[
				"cofee",
				"Coffee: Run Cake Task"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"packages l",
				"Package Control: List Packages"
			],
			[
				"git file",
				"Git: Diff Current File"
			],
			[
				"git histor",
				"Git: Commit history"
			],
			[
				"github histo",
				"GitHub: History"
			],
			[
				"git history",
				"GitHub: History"
			],
			[
				"git histo",
				"GitHub: History"
			],
			[
				"git commit",
				"Git: Commit history"
			],
			[
				"git branch",
				"Git: Change Branch"
			],
			[
				"package remo",
				"Package Control: Remove Package"
			],
			[
				"github blam",
				"GitHub: Blame"
			],
			[
				"githubina",
				"GitHubinator Blame"
			],
			[
				"github open",
				"GitHub: Open Gist in Browser"
			],
			[
				"gitgutter",
				"GitGutter: Show Comparing Against"
			],
			[
				"git sta",
				"Git: Diff Staged"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"origami destro",
				"Origami: Destroy Current Pane"
			],
			[
				"origamileft",
				"Origami: Create Pane on the Left"
			],
			[
				"github bla",
				"GitHub: Blame"
			],
			[
				"githuv",
				"GitHub: View"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"gher",
				"Gherkin/Cucumber: Format"
			],
			[
				"gherkin",
				"Gherkin/Cucumber: Format"
			],
			[
				"blam",
				"GitHub: Blame"
			],
			[
				"github view",
				"GitHub: View"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 430.0,
		"history":
		[
			"import django",
			"random.randint(0,2)",
			"import random",
			"random.randint(0,2)",
			"__main__",
			"__name__",
			"print PATH",
			"PATH",
			"ls",
			"which python",
			"2 + 3",
			"python",
			"pip --version",
			"pip list",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/alex/uberVU/deploy/hubot.py",
		"/Users/alex/uberVU/deploy/runner_script.py",
		"/Users/alex/uberVU/deploy/fabfile.py",
		"/Users/alex/uberVU/deploy/jars/com/esotericsoftware/yamlbeans/yamlbeans/1.06/yamlbeans-1.06.pom",
		"/Users/alex/uberVU/deploy/ubervu_fabfile.py",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/lib/utils/error-handler.js",
		"/Users/alex/uberVU/deploy/deploy_handler.py",
		"/Users/alex/uberVU/deploy/redeploy-hootvu-app.sh",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/node-gyp/gyp/tools/emacs/README",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/uid-number/get-uid-gid.js",
		"/Users/alex/uberVU/deploy/jars/commons-logging/commons-logging/1.0/commons-logging-1.0.pom",
		"/Users/alex/uberVU/deploy/logs.py",
		"/Users/alex/uberVU/deploy/jars/net/kencochrane/raven/raven-log4j/4.1.2/raven-log4j-4.1.2.pom",
		"/Users/alex/uberVU/deploy/jars/net/kencochrane/raven/raven/4.1.2/raven-4.1.2.pom",
		"/Users/alex/uberVU/deploy/conf/thehole.yml",
		"/Users/alex/uberVU/deploy/tests/test_deploy.py",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/tar/lib/global-header-writer.js",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/block-stream/package.json",
		"/Users/alex/uberVU/deploy/tests/test_github_api.py",
		"/Users/alex/uberVU/deploy/running_state.py",
		"/Users/alex/uberVU/deploy/conf/deploy-system-test-repo.yml",
		"/Users/alex/uberVU/deploy/deploy_server.py",
		"/Users/alex/uberVU/deploy/ubervu.py",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/include/node/uv-private/uv-bsd.h",
		"/Users/alex/uberVU/deploy/runner-script.sh",
		"/Users/alex/uberVU/deploy/README.md",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/glob/glob.js",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/node-gyp/gyp/tools/emacs/gyp-tests.el",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/node-gyp/gyp/tools/emacs/gyp.el",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/glob/examples/g.js",
		"/Users/alex/uberVU/deploy/.gitignore",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/request/node_modules/http-signature/.dir-locals.el",
		"/Users/alex/uberVU/deploy/packages/Twisted/Twisted-12.1.0.tar.bz2",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctype/tst.writeStruct.js",
		"/Users/alex/uberVU/deploy/notifications.py",
		"/Users/alex/uberVU/deploy/loader.py",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/init-package-json/node_modules/promzard/example/substack-input.js",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/init-package-json/node_modules/promzard/example/npm-init/package.json",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/init-package-json/example/example-npm.js",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/node_modules/init-package-json/example/example-basic.js",
		"/Users/alex/uberVU/deploy/bin/node-v0.10.25-linux-x64/lib/node_modules/npm/man/man5/npm-json.5",
		"/Users/alex/uberVU/deploy/conf/test_thehole.yml",
		"/Users/alex/uberVU/puppet/Vagrantfile",
		"/Users/alex/uberVU/puppet/modules/stdlib/lib/puppet/parser/functions/validate_array.rb",
		"/Users/alex/uberVU/puppet/modules/elasticsearch/files/es-nagios-check.pl",
		"/Users/alex/uberVU/puppet/manifests/nodes.d/es.pp",
		"/Users/alex/uberVU/puppet/modules/elasticsearch/manifests/python.pp",
		"/Users/alex/uberVU/puppet/page.html",
		"/Users/alex/uberVU/thehole/ubervu/frontend/lib/export/export_report.py",
		"/Users/alex/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/alex/Library/Application Support/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/Users/alex/uberVU/thehole/models/report/__init__.py",
		"/Users/alex/uberVU/thehole/ubervu/api/resources/report_widget_resource.py",
		"/Users/alex/uberVU/thehole/app/modules/models/report_widget.coffee",
		"/Users/alex/.homesick/repos/palcu/dotfiles/applescripts/save_battery.applescript",
		"/Users/alex/.homesick/repos/palcu/dotfiles/applescripts/battery_apps.txt",
		"/Users/alex/.homesick/repos/palcu/dotfiles/applescripts/open_after_save_battery.applescript",
		"/Users/alex/.homesick/repos/palcu/dotfiles/applescripts/open_after_save_battery.appplescript",
		"/Users/alex/uberVU/thehole/app/core/base_widgets/drag_and_drop_grid_list.coffee",
		"/Users/alex/uberVU/thehole/app/modules/editors/radio_widget_editor.coffee",
		"/Users/alex/uberVU/thehole/ubervu/frontend/tests/integration/test_report.py",
		"/Users/alex/uberVU/thehole/ubervu/api/tests/base_test_case.py",
		"/Users/alex/uberVU/thehole/ubervu/api/tests/integration/test_report_default_templates_resource.py",
		"/Users/alex/uberVU/thehole/app/templates/actions/edit_report_title.hjs",
		"/Users/alex/uberVU/thehole/models/recipes/report_template.py",
		"/Users/alex/uberVU/thehole/models/report/report.py",
		"/Users/alex/uberVU/thehole/email_alerts/scripts/render_email.py",
		"/Users/alex/uberVU/thehole/README.md",
		"/Users/alex/uberVU/thehole/app/modules/base/widgets/edit_size_board_widget_form.coffee",
		"/Users/alex/uberVU/thehole/app/core/base_widgets/base_form.coffee",
		"/Users/alex/uberVU/thehole/app/core/base_widgets/update_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/backbone_editors.coffee",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/edit_report_widget_action.coffee",
		"/Users/alex/uberVU/thehole/app/templates/reports/edit_report_widget_action.hjs",
		"/Users/alex/uberVU/thehole/app/modules/base/widgets/actions/edit_action.coffee",
		"/Users/alex/uberVU/thehole/clients/exceptions.py",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/report_widget_decorator.coffee",
		"/Users/alex/uberVU/thehole/app/modules/editors/radio_editor.coffee",
		"/Users/alex/uberVU/thehole/analyzer/scripts/restart_analyzer.py",
		"/Users/alex/uberVU/thehole/app/conf/modules.js",
		"/Users/alex/uberVU/thehole/app/templates/editors/radio_editor.hjs",
		"/Users/alex/uberVU/thehole/models/report_widget/report_widget.py",
		"/Users/alex/uberVU/thehole/ubervu/api/resources/base/uber_model_resource.py",
		"/Users/alex/uberVU/thehole/app/constants/models.coffee",
		"/Users/alex/uberVU/thehole/app/core/base_widgets/autocomplete_editor.coffee",
		"/Users/alex/uberVU/thehole/app/core/libs/backbone/backbone-forms.js",
		"/Users/alex/uberVU/thehole/app/patches/0009-backbone.js-clone-event-params.patch",
		"/Users/alex/uberVU/thehole/docs/infrastructure/backend.md",
		"/Users/alex/uberVU/thehole/app/modules/streams/widget/social_profile_stream_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/filters/widget/filter.coffee",
		"/Users/alex/uberVU/thehole/app/templates/editors/group_radio_editor.hjs",
		"/Users/alex/uberVU/thehole/app/core/utils.coffee",
		"/Users/alex/uberVU/thehole/app/modules/editors/group_radio_widget_editor.coffee",
		"/Users/alex/uberVU/thehole/app/modules/search/widget/report_widget_search_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/report_template_stream.coffee",
		"/Users/alex/uberVU/thehole/app/modules/base/widgets/select.coffee",
		"/Users/alex/uberVU/thehole/app/templates/select.hjs",
		"/Users/alex/uberVU/thehole/core/settings_local.py",
		"/Users/alex/uberVU/thehole/docs/infrastructure/separate_environment",
		"/Users/alex/uberVU/thehole/sync_mozaic.py",
		"/Users/alex/uberVU/thehole/app/modules/base/widgets/pin_board_widget_form.coffee",
		"/Users/alex/uberVU/thehole/app/core/libs/jquery/jquery.gridList.js",
		"/Users/alex/uberVU/thehole/app/core/libs/gridList.js",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/board_widget_list.coffee",
		"/Users/alex/uberVU/thehole/app/modules/reports/lib/pinning.coffee",
		"/Users/alex/uberVU/thehole/app/templates/page.hjs",
		"/Users/alex/uberVU/thehole/app/modules/base/modals/popup.coffee",
		"/Users/alex/uberVU/thehole/jobs/job.py",
		"/Users/alex/uberVU/thehole/Gruntfile.coffee",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/download_report_action.coffee",
		"/Users/alex/uberVU/thehole/docs/vagrant/download_reports.md",
		"/Users/alex/uberVU/thehole/docs/how_to/debug.md",
		"/Users/alex/uberVU/thehole/app/modules/reports/widget/report_widget_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/tasks/widget/task_form.coffee",
		"/Users/alex/uberVU/thehole/app/templates/board_widget/report_id.hjs",
		"/Users/alex/uberVU/thehole/app/docs/bootstrap.md",
		"/Users/alex/uberVU/thehole/app/modules/base/widgets/edit_board_widget_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/signals/widget/signals_settings_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/streams/widget/historical_job_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/streams/widget/stream_copy_form.coffee",
		"/Users/alex/uberVU/thehole/app/core/mozaic_backbone_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/account/widget/account_form.coffee",
		"/Users/alex/uberVU/thehole/app/constants/reports.coffee",
		"/Users/alex/uberVU/thehole/ubervu/templates/registration/password_reset_email.html",
		"/Users/alex/uberVU/thehole/app/templates/reports/reports-page.hjs",
		"/Users/alex/uberVU/thehole/ubervu/frontend/tests/unit/report/test_report_permissions.py",
		"/Users/alex/uberVU/thehole/app/modules/streams/widget/search_expression_form.coffee",
		"/Users/alex/uberVU/thehole/app/modules/social_posts/widget/social_post_form.coffee"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"*.py",
			"*.coffee, *.hjs",
			"*.coffee",
			"*.js",
			"*.coffee",
			"*.hjs",
			"*.coffee",
			"*form.coffee",
			"*.coffee",
			"model*",
			"model*coffee",
			"*.coffee",
			"*.js",
			"*.coffee",
			"",
			"*.coffee",
			"*.hjs",
			"*.coffee, *.js, *.py, *.hjs",
			"*.coffee, *.js, *.py",
			"*.coffee, *.js",
			"*.coffee",
			"*.hjs",
			"*.coffee, *.hjs, *.js, *.css",
			"*.coffee, *.hjs, *.js",
			"*.coffee, *.hjs",
			"*.coffee",
			"*.py",
			"*.coffee, *.hjs",
			"*.coffee",
			"*.py",
			"test_current_resource.py",
			"*.py",
			"test_current_resource.py",
			"*.py",
			"*.css",
			"*.py, *.coffee",
			"*.py",
			"00*.py",
			"*.md",
			"*.py",
			"*.coffee",
			"*.py",
			"",
			"*.py",
			"test_report_resource.py",
			"*.py",
			"*.md",
			"*.py",
			"*.coffee, *.hjs, *.css",
			"",
			"*.coffee, *.hjs",
			"*.coffee",
			"",
			"*.md",
			"*.coffee, *.css, *.hjs",
			"*.coffee, *.css, *.hjs, *.js",
			"*.coffee, *.css, *.hjs",
			"*.coffee",
			"*.md",
			"*.coffee, *.js, *css, *.hjs",
			"*.coffee, *.js, *css",
			"*.coffee, *.js",
			"*.py",
			"*.coffee, *.js",
			"*.coffee",
			"*.md",
			"",
			"*.coffee",
			"*.py",
			"",
			"unleashed-new.css",
			"*.css",
			"*.hjs",
			"*.coffee",
			"*.coffe",
			"*.css",
			"*.coffee",
			"*.hjs",
			"",
			"*.md",
			"*.coffee, *.js",
			"*.coffee",
			"",
			"*.coffee",
			"*.hjs",
			"",
			"unleashed-new.css",
			"",
			"*.hjs",
			"*.css",
			"",
			"unleashed-new.css",
			"unleashed.css",
			"",
			"*.hjs",
			"*.css",
			"*.coffee",
			"*.css",
			"*.coffee",
			"*.hjs",
			"*.coffee",
			"*.css",
			"*.coffee",
			"*.py",
			"*.coffee",
			"*.py",
			"*.coffee",
			"*.py",
			"*.feature",
			"*.py",
			"",
			"*.feature",
			"*.py",
			"*.coffee",
			"*.hjs",
			"*.coffee",
			"*.css",
			"*.coffee",
			"*.py",
			"*.md",
			"*.coffee",
			"*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"test_deploy_timedout_script",
			"semantr",
			"deploy",
			"git pull",
			"start_deploy",
			"stage-w-5",
			"detector",
			"semantria",
			"notify_and_kill",
			"notify_pusher",
			"test_deploy_timedout",
			"test_deployed",
			"deploy",
			"debploy",
			"popen",
			"runner_script",
			"received pay",
			"Received payload from GitHub",
			"home/django/logs",
			"logs",
			"frontend.log",
			"/logs",
			"logs",
			"reports.log",
			"django.log",
			"engagement.log",
			"github",
			"_choose_user_for_session",
			"import ReportFactory",
			"\"radio_editor\"",
			"render",
			"required_value",
			"selected",
			"debugger",
			"RadioEditor",
			".selected",
			"selected",
			"RadioEditor",
			"radio_editor",
			"widget-radio_editor",
			"getValue",
			"\"selected\"",
			"'selected'",
			"selected",
			"selectedValue",
			"getValue",
			"selectedValue",
			"selected",
			"debugger",
			"'selected'",
			"\"selected\"",
			"'selected'",
			"addClass('selected')",
			"'selected'",
			"attr 'selected'",
			"selected",
			"core/",
			"setValue",
			"value",
			"selected",
			"getSelectedElement",
			"selected",
			"select",
			"selected",
			"renderOption",
			"selected",
			"_formShouldSubmitOnChange",
			"selected",
			".selected",
			"options.selected",
			".selected",
			"afterRender",
			"widget",
			"afterRender",
			"selected",
			"'width'",
			"width",
			"debugger",
			"submit_on_single_field_change",
			"_formShouldSubmitOnChange",
			"@view.$el.find('.commit')",
			"renderLayout",
			"options.selected",
			".selected",
			"afterRender",
			".commit",
			"commit",
			".commit",
			"delete_form",
			"pin_board_widget_form",
			"super",
			"init",
			"',\n",
			"',",
			"_board_",
			"board_",
			"edit_",
			"selected",
			"ongrid",
			"extends UpdateForm",
			"fields",
			"form.fields",
			"form.",
			"form.add",
			"before",
			"form_widget",
			"edit_board_widget_form",
			"EditBoardWidgetForm",
			"updateLinkMeta",
			"beforeRender",
			"setValue",
			"addValue",
			"setValue",
			"form.setValue",
			"setValue",
			"@form.model",
			"_updatePrice",
			"setValue",
			"form",
			"setValue",
			"@form.set",
			"setValue",
			"getValue",
			"getValue()",
			"function getValue()",
			"getValue()",
			"beforeCommit",
			"@getValue()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self.params",
			"resource_url",
			"",
			"decorated-widget-board-actions",
			".inline-form",
			".widget-pin_board_widget_form"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/alex/uberVU/deploy/conf/thehole.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2561,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 199.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/alex/uberVU/deploy/conf/modules/backend.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 688,
						"regions":
						{
						},
						"selection":
						[
							[
								174,
								174
							]
						],
						"settings":
						{
							"SideBarAutoAddFoldersForOpenedFiles": 1,
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "/Users/alex/uberVU/deploy/github_api.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8027,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SideBarAutoAddFoldersForOpenedFiles": 1,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2651.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										119,
										146
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								128,
								128
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": false,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": false,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"sublime_auto_complete": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/alex/uberVU/deploy/tests/test_deploy.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6018,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": false,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": false,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9459,
						"regions":
						{
						},
						"selection":
						[
							[
								9459,
								9459
							]
						],
						"settings":
						{
							"auto_name": "#The structure of the input is the one below there",
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": false,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": false,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/alex/uberVU/deploy/logs.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 693,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.171522905079,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 100.0
	},
	"output.git":
	{
		"height": 91.0
	},
	"project": "deploy.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"yml",
				"conf/modules/backend.yml"
			],
			[
				"log",
				"logs.py"
			],
			[
				"hub",
				"hubot.py"
			],
			[
				"github_api.py",
				"github_api.py"
			],
			[
				"test_de",
				"tests/test_deploy.py"
			],
			[
				"ubervufa",
				"ubervu_fabfile.py"
			],
			[
				"runner",
				"runner_script.py"
			],
			[
				"logs.",
				"logs.py"
			],
			[
				"test_dep",
				"tests/test_deploy.py"
			],
			[
				"deploy_handler.py",
				"deploy_handler.py"
			],
			[
				"deploy_serv",
				"deploy_server.py"
			],
			[
				"vagrant.pp",
				"manifests/nodes.d/vagrant.pp"
			],
			[
				"python",
				"modules/thehole/manifests/packages/python.pp"
			],
			[
				"testrepot",
				"ubervu/frontend/tests/integration/test_report.py"
			],
			[
				"drag_and_drop_grid_list.coffee",
				"app/core/base_widgets/drag_and_drop_grid_list.coffee"
			],
			[
				"report_widget",
				"app/modules/models/report_widget.coffee"
			],
			[
				"editwidgetcoff",
				"app/modules/base/widgets/edit_size_board_widget_form.coffee"
			],
			[
				"edit_wid",
				"app/templates/reports/edit_report_widget_action.hjs"
			],
			[
				"report_widget_dec",
				"app/modules/reports/widget/report_widget_decorator.coffee"
			],
			[
				"report_widget_re",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"modelsreport_wdi",
				"models/report_widget/report_widget.py"
			],
			[
				"modules/editors/radio_editor",
				"app/modules/editors/radio_widget_editor.coffee"
			],
			[
				"modules",
				"app/conf/modules.js"
			],
			[
				"radio_ed",
				"app/templates/editors/radio_editor.hjs"
			],
			[
				"edit_size",
				"app/modules/base/widgets/edit_size_board_widget_form.coffee"
			],
			[
				"backb",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"radio_edi",
				"app/templates/editors/radio_editor.hjs"
			],
			[
				"backbone-forms",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"radio_e",
				"app/modules/editors/radio_editor.coffee"
			],
			[
				"backbone-",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"update_form",
				"app/core/base_widgets/update_form.coffee"
			],
			[
				"select.co",
				"app/modules/base/widgets/select.coffee"
			],
			[
				"report_wi",
				"app/modules/models/report_widget.coffee"
			],
			[
				"base_form",
				"app/core/base_widgets/base_form.coffee"
			],
			[
				"pin_board_widget_form",
				"app/modules/base/widgets/pin_board_widget_form.coffee"
			],
			[
				"basefo",
				"app/core/base_widgets/base_form.coffee"
			],
			[
				"updateform",
				"app/core/base_widgets/update_form.coffee"
			],
			[
				"radio_",
				"app/modules/editors/radio_editor.coffee"
			],
			[
				"edit_size_board_widget_form",
				"app/modules/base/widgets/edit_size_board_widget_form.coffee"
			],
			[
				"pin_board_",
				"app/modules/base/widgets/pin_board_widget_form.coffee"
			],
			[
				"report_widget_res",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"radio_edit",
				"app/modules/editors/radio_editor.coffee"
			],
			[
				"report_widget.co",
				"app/modules/models/report_widget.coffee"
			],
			[
				"jquerygri",
				"app/core/libs/jquery/jquery.gridList.js"
			],
			[
				"gridlist",
				"app/core/libs/gridList.js"
			],
			[
				"drag_an",
				"app/core/base_widgets/drag_and_drop_grid_list.coffee"
			],
			[
				"board_widget_list",
				"app/modules/reports/widget/board_widget_list.coffee"
			],
			[
				"editboardwi",
				"app/modules/base/widgets/edit_board_widget_form.coffee"
			],
			[
				"backbonefo",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"forms.js",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"backboneform",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"backbonefor",
				"app/core/libs/backbone/backbone-forms.js"
			],
			[
				"widget.co",
				"app/core/widget/widget.coffee"
			],
			[
				"editboard",
				"app/modules/base/widgets/edit_board_widget_form.coffee"
			],
			[
				"baseform",
				"app/core/base_widgets/base_form.coffee"
			],
			[
				"ubvu_nes",
				"app/modules/base/widgets/ubvu_nested_attributes_form.coffee"
			],
			[
				"edit_board",
				"app/modules/base/widgets/edit_board_widget_form.coffee"
			],
			[
				"update_fo",
				"app/core/base_widgets/update_form.coffee"
			],
			[
				"update",
				"app/core/base_widgets/update_form.coffee"
			],
			[
				"delete_form",
				"app/core/base_widgets/delete_form.coffee"
			],
			[
				"edit_board_widget_form.coffee",
				"app/modules/base/widgets/edit_board_widget_form.coffee"
			],
			[
				"report_widget_reso",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"widget_dec",
				"app/core/base_widgets/widget_decorator.coffee"
			],
			[
				"widgetdec",
				"app/core/base_widgets/widget_decorator.coffee"
			],
			[
				"report_widgetreso",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"resourcereport",
				"ubervu/api/resources/report.py"
			],
			[
				"report_widget.coffee",
				"app/modules/reports/widget/reports_widgets_state_manager.coffee"
			],
			[
				"radio",
				"app/modules/editors/radio_editor.coffee"
			],
			[
				"context_men",
				"app/core/base_mixins/context_menu.coffee"
			],
			[
				"edit_action.hjs",
				"app/templates/base/edit_action.hjs"
			],
			[
				"edit_ca",
				"app/modules/base/widgets/actions/edit_action.coffee"
			],
			[
				"edit_act",
				"app/modules/reports/widget/edit_report_widget_action.coffee"
			],
			[
				"contextmenu",
				"app/core/base_widgets/context_menu.coffee"
			],
			[
				"report_widget_form",
				"app/modules/reports/widget/report_widget_form.coffee"
			],
			[
				"nestedattributesform",
				"app/core/base_widgets/nested_attributes_form.coffee"
			],
			[
				"ubvunestedattributesform",
				"app/modules/base/widgets/ubvu_nested_attributes_form.coffee"
			],
			[
				"jquerygr",
				"app/core/libs/jquery/jquery.gridList.js"
			],
			[
				"widget",
				"app/core/widget/widget.coffee"
			],
			[
				"scrolla",
				"app/core/scrollable_widget.coffee"
			],
			[
				"list.coff",
				"app/core/base_widgets/list/list.coffee"
			],
			[
				"gridli",
				"app/core/libs/gridList.js"
			],
			[
				"report_widget.coff",
				"app/modules/models/report_widget.coffee"
			],
			[
				"board_widget_l",
				"app/modules/reports/widget/board_widget_list.coffee"
			],
			[
				"debug",
				"docs/how_to/debug.md"
			],
			[
				"loader",
				"app/core/loader.coffee"
			],
			[
				"gridlis",
				"app/core/base_widgets/drag_and_drop_grid_list.coffee"
			],
			[
				"gridlistco",
				"app/core/base_widgets/drag_and_drop_grid_list.coffee"
			],
			[
				"grid",
				"app/core/libs/gridList.js"
			],
			[
				"models/report_widget",
				"app/modules/models/report_widget.coffee"
			],
			[
				"edit_report_",
				"app/modules/reports/controller/edit_report_controller.coffee"
			],
			[
				"confirm_",
				"app/modules/reports/widget/confirm_board_view_change.coffee"
			],
			[
				"report_widge",
				"app/modules/models/report_widget.coffee"
			],
			[
				"channel.co",
				"app/core/datasource/channel.coffee"
			],
			[
				"resoreport.py",
				"ubervu/api/resources/report.py"
			],
			[
				"model/report_widget.co",
				"app/modules/models/report_widget.coffee"
			],
			[
				"report.",
				"models/report/report.py"
			],
			[
				"report.c",
				"app/modules/models/report.coffee"
			],
			[
				"confirm_board",
				"app/modules/reports/widget/confirm_board_view_change.coffee"
			],
			[
				"report_wid",
				"app/modules/models/report_widget.coffee"
			],
			[
				"report_widget_wrap",
				"app/modules/reports/widget/report_widget_wrapper.coffee"
			],
			[
				"jquerygrid",
				"app/core/libs/jquery/jquery.gridList.js"
			],
			[
				"gridl",
				"app/core/base_widgets/drag_and_drop_grid_list.coffee"
			],
			[
				"report_widget.py",
				"models/report_widget/report_widget.py"
			],
			[
				"report.coffe",
				"app/modules/models/report.coffee"
			],
			[
				"mockscof",
				"app/modules/rest_resource/mocks.coffee"
			],
			[
				"mocksco",
				"app/core/mocks.coffee"
			],
			[
				"reportcolec",
				"app/modules/collections/report_collection.coffee"
			],
			[
				"resources/report.",
				"ubervu/api/resources/report.py"
			],
			[
				"report_res",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"core/resttem",
				"app/core/rest_resource/rest_resource_templates.coffee"
			],
			[
				"report_widget_resource",
				"ubervu/api/resources/report_widget_resource.py"
			],
			[
				"report_widget_form.co",
				"app/modules/reports/widget/report_widget_form.coffee"
			],
			[
				"board_widget/",
				"app/templates/board_widget/report_id.hjs"
			],
			[
				"backboneedit",
				"app/modules/backbone_editors.coffee"
			],
			[
				"contex_men",
				"app/templates/base/context_menu.hjs"
			],
			[
				"context_menu",
				"app/core/base_widgets/context_menu.coffee"
			],
			[
				"context_me",
				"app/core/base_mixins/context_menu.coffee"
			],
			[
				"widgeteditor",
				"app/core/base_widgets/widget_editor.coffee"
			],
			[
				"edit_action",
				"app/modules/base/widgets/actions/edit_action.coffee"
			],
			[
				"modules.",
				"app/conf/modules.js"
			],
			[
				"radio_edito",
				"app/templates/editors/radio_editor.hjs"
			],
			[
				"templatesboard_widget",
				"app/templates/board_widget/report_id.hjs"
			],
			[
				"report_widget_deco",
				"app/modules/reports/widget/report_widget_decorator.coffee"
			],
			[
				"edit_ac",
				"app/modules/base/widgets/actions/edit_action.coffee"
			],
			[
				"edit_acti",
				"app/templates/base/edit_action.hjs"
			],
			[
				"grunt",
				"Gruntfile.coffee"
			],
			[
				"popup.co",
				"app/modules/base/modals/popup.coffee"
			],
			[
				"list.hjs",
				"app/templates/activity_list.hjs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"play",
				"~/Projects/sublime_projects/playbooks.sublime-project"
			],
			[
				"hole",
				"~/Projects/sublime_projects/thehole.sublime-project"
			],
			[
				"puppet",
				"~/Projects/sublime_projects/puppet.sublime-project"
			],
			[
				"pu",
				"~/Projects/sublime_projects/puppet.sublime-project"
			],
			[
				"ho",
				"~/Projects/sublime_projects/thehole.sublime-project"
			],
			[
				"pupp",
				"~/Projects/sublime_projects/puppet.sublime-project"
			],
			[
				"deploy",
				"~/Projects/sublime_projects/deploy.sublime-project"
			],
			[
				"",
				"~/Projects/sublime_projects/dashpalcu.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
